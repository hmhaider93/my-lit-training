{"version":3,"file":"simple-carousel.js","sourceRoot":"","sources":["src/simple-carousel.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,qBAAqB,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAC1F,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAEzD,OAAO,mBAAmB,CAAC;AAG3B,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,UAAU;IAA9C;;QAkC6B,eAAU,GAAG,CAAC,CAAC;QACvB,oBAAe,GAAG,CAAC,CAAC;IA0DzC,CAAC;IAtDS,MAAM;QAEd,MAAM,eAAe,GAAG;YACtB,MAAM,EAAE,GAAG,IAAI,CAAC,eAAe,IAAI;SACpC,CAAC;QAEA,OAAO,IAAI,CAAA;;eAEA,IAAI,CAAC,mBAAmB;SAC9B,UAAU;;eAEJ,QAAQ,CAAC,eAAe,CAAC;;;;;eAKzB,IAAI,CAAC,mBAAmB;SAC9B,WAAW;OACb,CAAA;IACL,CAAC;IAEQ,YAAY;QACnB,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACxD,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEQ,OAAO;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,aAAa;QACnB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAC/C,IAAG,CAAC,KAAK,IAAI,CAAC,UAAU,EAAC;gBACrB,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;aACpC;;gBAAK,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1C;IACH,CAAC;IAEO,WAAW,CAAC,MAAa;QAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,GAAC,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC;IACxF,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;CAKF,CAAA;AA3FqB,qBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA8B1B,CAAA;AAEqB;IAAxB,QAAQ,CAAC,EAAC,IAAI,EAAC,MAAM,EAAC,CAAC;kDAAgB;AAC/B;IAAR,KAAK,EAAE;uDAA6B;AAEZ;IAAxB,qBAAqB,EAAE;qDAAgD;AArC/D,cAAc;IAD1B,aAAa,CAAC,iBAAiB,CAAC;GACpB,cAAc,CA6F1B;SA7FY,cAAc;AA+F3B,SAAS,SAAS,CAAC,EAAe;IAC9B,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACrC,CAAC;AAED,SAAS,SAAS,CAAC,EAAe;IAC9B,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACxC,CAAC;AAED,SAAS,YAAY,CAAC,GAAkB;IACtC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAA,EAAE,CAAA,EAAE,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACxE,CAAC","sourcesContent":["import { LitElement, html, css } from 'lit';\r\nimport { customElement, property, queryAssignedElements, state } from 'lit/decorators.js';\r\nimport {styleMap} from \"lit/directives/style-map.js\";\r\nimport { CARET_LEFT, CARET_RIGHT } from './constants.js';\r\n\r\nimport './slide-button.js';\r\n\r\n@customElement('simple-carousel')\r\nexport class SimpleCarousel extends LitElement {\r\n\r\n      static override styles = css`\r\n\r\n        ::slotted(.slide-hidden){\r\n            display:none;\r\n        }\r\n\r\n        ::slotted(*){\r\n          position: absolute;\r\n          padding: 1em;\r\n        }\r\n\r\n        :host {\r\n          display: flex;\r\n          flex-direction : row;\r\n          align-items : center;\r\n        }\r\n\r\n        #container{\r\n          border-radius: 24px;\r\n          display:flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          flex: 1;\r\n          margin: 0 18px;\r\n          padding: 1em;\r\n          overflow: hidden;\r\n          position: relative;\r\n          box-shadow: var(--shadow, gray) 0.3em 0.3em 0.4em, var(--highlight, white) -0.1em -0.1em 0.3em;\r\n        }\r\n\r\n      `;\r\n\r\n    @property({type:Number}) slideIndex = 0;\r\n    @state() private containerHeight = 0;\r\n\r\n    @queryAssignedElements() private readonly slideElements!: HTMLElement[];\r\n\r\n override render(){\r\n\r\n  const containerStyles = {\r\n    height: `${this.containerHeight}px`\r\n  };\r\n\r\n    return html`\r\n      <slide-button\r\n      @click=${this.navigateToPrevSlide}\r\n      >${CARET_LEFT}</slide-button>\r\n      <div id=\"container\"\r\n      style=\"${styleMap(containerStyles)}\"\r\n      >\r\n        <slot></slot>\r\n      </div>\r\n      <slide-button\r\n      @click=${this.navigateToNextSlide}\r\n      >${CARET_RIGHT}</slide-button>\r\n      `\r\n  }\r\n\r\n  override firstUpdated(){\r\n    this.containerHeight = getMaxHeight(this.slideElements);\r\n    this.navigateSlide();\r\n  }\r\n\r\n  override updated(){\r\n    this.navigateSlide();\r\n  }\r\n\r\n  private navigateSlide(){\r\n    for(let i = 0 ; i < this.slideElements.length; i++){\r\n        if(i === this.slideIndex){\r\n            showSlide(this.slideElements[i]);\r\n        }else hideSlide(this.slideElements[i]);\r\n    }\r\n  }\r\n\r\n  private changeSlide(offset:number){\r\n    const slideCount = this.slideElements.length;\r\n    this.slideIndex = (slideCount + ((this.slideIndex+offset) % slideCount)) % slideCount;\r\n  }\r\n\r\n  navigateToNextSlide(){\r\n    this.changeSlide(1);\r\n  }\r\n\r\n  navigateToPrevSlide(){\r\n    this.changeSlide(-1);\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction hideSlide(el: HTMLElement){\r\n    el.classList.add('slide-hidden');\r\n}\r\n\r\nfunction showSlide(el: HTMLElement){\r\n    el.classList.remove('slide-hidden');\r\n}\r\n\r\nfunction getMaxHeight(els: HTMLElement[]):number {\r\n  return Math.max(0, ...els.map(el=>el.getBoundingClientRect().height));\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'simple-carousel' : SimpleCarousel ;\r\n  }\r\n}\r\n\r\n"]}